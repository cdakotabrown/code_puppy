name: Quality Checks

on:
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.13']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Setup uv virtual environment
        run: uv venv

      - name: Install dependencies
        run: uv pip install -e .

      - name: Install pexpect for integration tests
        run: uv pip install pexpect>=4.9.0

      - name: Debug environment variables
        env:
          CEREBRAS_API_KEY: ${{ secrets.CEREBRAS_API_KEY || 'fake-key-for-ci-testing' }}
          CONTEXT7_API_KEY: ${{ secrets.CONTEXT7_API_KEY || 'fake-key-for-ci-testing' }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'fake-key-for-ci-testing' }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || 'fake-key-for-ci-testing' }}
        run: |
          echo "=== DEBUG: Environment Variables ==="
          echo "CEREBRAS_API_KEY is set: ${{ secrets.CEREBRAS_API_KEY != '' }}"
          echo "CONTEXT7_API_KEY is set: ${{ secrets.CONTEXT7_API_KEY != '' }}"
          echo "OPENAI_API_KEY is set: ${{ secrets.OPENAI_API_KEY != '' }}"
          echo "ANTHROPIC_API_KEY is set: ${{ secrets.ANTHROPIC_API_KEY != '' }}"
          echo "CEREBRAS_API_KEY length: ${#CEREBRAS_API_KEY}"
          echo "CONTEXT7_API_KEY length: ${#CONTEXT7_API_KEY}"
          echo "OPENAI_API_KEY length: ${#OPENAI_API_KEY}"
          echo "ANTHROPIC_API_KEY length: ${#ANTHROPIC_API_KEY}"
          echo "=== END DEBUG ==="

      - name: Run tests
        env:
          CEREBRAS_API_KEY: ${{ secrets.CEREBRAS_API_KEY || 'fake-key-for-ci-testing' }}
          CONTEXT7_API_KEY: ${{ secrets.CONTEXT7_API_KEY || 'fake-key-for-ci-testing' }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'fake-key-for-ci-testing' }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY || 'fake-key-for-ci-testing' }}
        run: |
          echo "Running all tests (including integration tests) on ${{ runner.os }} with Python ${{ matrix.python-version }}..."
          echo "Required environment variables are set (using CI fallbacks if secrets not available)"
          uv run pytest tests/ -v --cov=code_puppy --cov-report=term-missing

  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dev dependencies (ruff)
        run: pip install ruff

      - name: Install code_puppy
        run: pip install .

      - name: Lint with ruff
        run: ruff check .

      - name: Check formatting with ruff
        run: ruff format --check .
